name: Verify
on: [push]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2.1.0
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: '14'

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn package cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Run linters
        run: |
          bundle exec rubocop --parallel
          yarn exec stylelint app/frontend/**/*.scss
          yarn exec eslint
          yarn prettier --check app/frontend/**/*.{js,scss}

      - name: Run security checks
        run: |
          bin/bundler-audit --update
          bin/brakeman -q -w2

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.8.1
        env:
          discovery.type: single-node
          ES_JAVA_OPTS: -Xms512m -Xmx512m
        ports: ["9200:9200"]
        options: >-
          --health-cmd "curl --silent --fail localhost:9200/_cluster/health || exit 1"
          --health-interval 30s
          --health-timeout 30s
          --health-retries 3

      minio:
        image: bitnami/minio:latest
        env:
          MINIO_ACCESS_KEY: 8410f671f6a2e6a00358a162884ed04e
          MINIO_SECRET_KEY: 48ed5cac333b028bdb8a2ad9fdacd867
        ports: ["9000:9000"]
        options: >-
          --health-cmd "curl --silent --fail localhost:9000/minio/health/live || exit 1"
          --health-interval 30s
          --health-timeout 30s
          --health-retries 3

      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: singulus_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1

      - name: Ruby gem cache
        uses: actions/cache@v2.1.0
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Set up Node
        uses: actions/setup-node@v2.1.1
        with:
          node-version: '14'

      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn package cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install yarn packages
        run: |
          yarn install --pure-lockfile

      - name: Create bucket
        env:
          ASSETS_BUCKET: singulus-test
          MINIO_ACCESS_KEY: 8410f671f6a2e6a00358a162884ed04e
          MINIO_SECRET_KEY: 48ed5cac333b028bdb8a2ad9fdacd867
        run: |
          wget -nv https://dl.min.io/client/mc/release/linux-amd64/mc && chmod +x mc
          echo -e "$MINIO_ACCESS_KEY\n$MINIO_SECRET_KEY" | ./mc alias set localhost http://localhost:9000 --api S3v4
          ./mc mb localhost/$ASSETS_BUCKET
          ./mc policy set download localhost/$ASSETS_BUCKET
          ./mc ls localhost

      - name: Run tests
        env:
          ASSETS_BUCKET: singulus-test
          ASSETS_HOST: localhost
          ASSETS_URL: http://localhost:9000/singulus-test
          # AWS_ACCESS_KEY_ID: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
          # AWS_REGION: us-east-1
          # AWS_SECRET_ACCESS_KEY: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
          ELASTICSEARCH_URL: http://localhost:9200
          GITHUB_BRANCH: main
          GITHUB_REPO: craftyphotons/singulus-hugo-test
          GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          MINIO_ACCESS_KEY: 8410f671f6a2e6a00358a162884ed04e
          MINIO_SECRET_KEY: 48ed5cac333b028bdb8a2ad9fdacd867
          RAILS_ENV: test
          SINGULUS_HOST: hub.tonyburns.test
          LINKS_HOST: links.tonyburns.test
          SITE_NAME: "Tony Burns"
          SITE_URL: "https://craftyphotons.github.io/singulus-hugo-test"
        run: |
          export DEVISE_PEPPER=$(bin/rails secret)
          bin/rails db:setup
          bin/rspec
